// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StartAnimation />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <svg
        viewBox="0 0 600 300"
      >
        <symbol
          id="s-text"
        >
          <text
            dy=".45em"
            textAnchor="left"
            x="15%"
            y="25%"
          >
            Hi!
          </text>
        </symbol>
        <use
          className={undefined}
          xlinkHref="#s-text"
        />
        <use
          className={undefined}
          xlinkHref="#s-text"
        />
        <use
          className={undefined}
          xlinkHref="#s-text"
        />
        <use
          className={undefined}
          xlinkHref="#s-text"
        />
        <use
          className={undefined}
          xlinkHref="#s-text"
        />
      </svg>,
      "className": "hello",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <symbol
            id="s-text"
          >
            <text
              dy=".45em"
              textAnchor="left"
              x="15%"
              y="25%"
            >
              Hi!
            </text>
          </symbol>,
          <use
            className={undefined}
            xlinkHref="#s-text"
          />,
          <use
            className={undefined}
            xlinkHref="#s-text"
          />,
          <use
            className={undefined}
            xlinkHref="#s-text"
          />,
          <use
            className={undefined}
            xlinkHref="#s-text"
          />,
          <use
            className={undefined}
            xlinkHref="#s-text"
          />,
        ],
        "viewBox": "0 0 600 300",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <text
              dy=".45em"
              textAnchor="left"
              x="15%"
              y="25%"
            >
              Hi!
            </text>,
            "id": "s-text",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hi!",
              "dy": ".45em",
              "textAnchor": "left",
              "x": "15%",
              "y": "25%",
            },
            "ref": null,
            "rendered": "Hi!",
            "type": "text",
          },
          "type": "symbol",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": undefined,
            "xlinkHref": "#s-text",
          },
          "ref": null,
          "rendered": null,
          "type": "use",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": undefined,
            "xlinkHref": "#s-text",
          },
          "ref": null,
          "rendered": null,
          "type": "use",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": undefined,
            "xlinkHref": "#s-text",
          },
          "ref": null,
          "rendered": null,
          "type": "use",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": undefined,
            "xlinkHref": "#s-text",
          },
          "ref": null,
          "rendered": null,
          "type": "use",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": undefined,
            "xlinkHref": "#s-text",
          },
          "ref": null,
          "rendered": null,
          "type": "use",
        },
      ],
      "type": "svg",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <svg
          viewBox="0 0 600 300"
        >
          <symbol
            id="s-text"
          >
            <text
              dy=".45em"
              textAnchor="left"
              x="15%"
              y="25%"
            >
              Hi!
            </text>
          </symbol>
          <use
            className={undefined}
            xlinkHref="#s-text"
          />
          <use
            className={undefined}
            xlinkHref="#s-text"
          />
          <use
            className={undefined}
            xlinkHref="#s-text"
          />
          <use
            className={undefined}
            xlinkHref="#s-text"
          />
          <use
            className={undefined}
            xlinkHref="#s-text"
          />
        </svg>,
        "className": "hello",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <symbol
              id="s-text"
            >
              <text
                dy=".45em"
                textAnchor="left"
                x="15%"
                y="25%"
              >
                Hi!
              </text>
            </symbol>,
            <use
              className={undefined}
              xlinkHref="#s-text"
            />,
            <use
              className={undefined}
              xlinkHref="#s-text"
            />,
            <use
              className={undefined}
              xlinkHref="#s-text"
            />,
            <use
              className={undefined}
              xlinkHref="#s-text"
            />,
            <use
              className={undefined}
              xlinkHref="#s-text"
            />,
          ],
          "viewBox": "0 0 600 300",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <text
                dy=".45em"
                textAnchor="left"
                x="15%"
                y="25%"
              >
                Hi!
              </text>,
              "id": "s-text",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Hi!",
                "dy": ".45em",
                "textAnchor": "left",
                "x": "15%",
                "y": "25%",
              },
              "ref": null,
              "rendered": "Hi!",
              "type": "text",
            },
            "type": "symbol",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": undefined,
              "xlinkHref": "#s-text",
            },
            "ref": null,
            "rendered": null,
            "type": "use",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": undefined,
              "xlinkHref": "#s-text",
            },
            "ref": null,
            "rendered": null,
            "type": "use",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": undefined,
              "xlinkHref": "#s-text",
            },
            "ref": null,
            "rendered": null,
            "type": "use",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": undefined,
              "xlinkHref": "#s-text",
            },
            "ref": null,
            "rendered": null,
            "type": "use",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": undefined,
              "xlinkHref": "#s-text",
            },
            "ref": null,
            "rendered": null,
            "type": "use",
          },
        ],
        "type": "svg",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
