// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`blog rendering 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Template
    data={
      Object {
        "indexCover": Object {
          "sizes": Object {
            "sizes": "image",
          },
        },
        "markdownRemark": Object {
          "frontmatter": Object {
            "date": "date",
            "excerpt": "excerpt",
            "image": Object {
              "childImageSharp": Object {
                "fluid": Object {
                  "sizes": "image",
                },
              },
            },
            "path": "path",
            "tags": Array [
              "tag1",
              "tag2",
            ],
            "timeToRead": 10,
            "title": "title",
          },
        },
        "site": Object {
          "siteMetadata": Object {
            "title": "title",
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Styled(styled.div)>
        <Seo
          data={
            Object {
              "date": "date",
              "excerpt": "excerpt",
              "image": Object {
                "childImageSharp": Object {
                  "fluid": Object {
                    "sizes": "image",
                  },
                },
              },
              "path": "path",
              "tags": Array [
                "tag1",
                "tag2",
              ],
              "timeToRead": 10,
              "title": "title",
            }
          }
          isPost={true}
        />
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            title
             • 
            title
          </title>
          <meta
            content={undefined}
            name="description"
          />
          <meta
            content="@laura-fyi"
            name="twitter:site"
          />
          <meta
            content="summary"
            name="twitter:card"
          />
          <meta
            content="@laura-fyi"
            name="twitter:creator"
          />
          <meta
            content="title"
            name="twitter:title"
          />
          <meta
            content={undefined}
            name="twitter:description"
          />
          <meta
            content={
              Object {
                "childImageSharp": Object {
                  "fluid": Object {
                    "sizes": "image",
                  },
                },
              }
            }
            name="twitter:image"
          />
          <meta
            content="Cover image"
            name="twitter:image:alt"
          />
        </HelmetWrapper>
        <styled.div>
          <h1>
            title
          </h1>
          <h3>
            date
          </h3>
          <Image
            Tag="div"
            alt=""
            critical={false}
            fadeIn={true}
            fluid={
              Object {
                "sizes": "image",
              }
            }
          />
          <styled.div
            dangerouslySetInnerHTML={
              Object {
                "__html": undefined,
              }
            }
          />
          <div
            className="tag-wrapper"
          >
            <styled.span>
              <UNDEFINED
                to="/tags/tag1"
              >
                tag1
              </UNDEFINED>
            </styled.span>
            <styled.span>
              <UNDEFINED
                to="/tags/tag2"
              >
                tag2
              </UNDEFINED>
            </styled.span>
          </div>
        </styled.div>
      </Styled(styled.div)>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Seo
            data={
              Object {
                "date": "date",
                "excerpt": "excerpt",
                "image": Object {
                  "childImageSharp": Object {
                    "fluid": Object {
                      "sizes": "image",
                    },
                  },
                },
                "path": "path",
                "tags": Array [
                  "tag1",
                  "tag2",
                ],
                "timeToRead": 10,
                "title": "title",
              }
            }
            isPost={true}
          />,
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              title
               • 
              title
            </title>
            <meta
              content={undefined}
              name="description"
            />
            <meta
              content="@laura-fyi"
              name="twitter:site"
            />
            <meta
              content="summary"
              name="twitter:card"
            />
            <meta
              content="@laura-fyi"
              name="twitter:creator"
            />
            <meta
              content="title"
              name="twitter:title"
            />
            <meta
              content={undefined}
              name="twitter:description"
            />
            <meta
              content={
                Object {
                  "childImageSharp": Object {
                    "fluid": Object {
                      "sizes": "image",
                    },
                  },
                }
              }
              name="twitter:image"
            />
            <meta
              content="Cover image"
              name="twitter:image:alt"
            />
          </HelmetWrapper>,
          <styled.div>
            <h1>
              title
            </h1>
            <h3>
              date
            </h3>
            <Image
              Tag="div"
              alt=""
              critical={false}
              fadeIn={true}
              fluid={
                Object {
                  "sizes": "image",
                }
              }
            />
            <styled.div
              dangerouslySetInnerHTML={
                Object {
                  "__html": undefined,
                }
              }
            />
            <div
              className="tag-wrapper"
            >
              <styled.span>
                <UNDEFINED
                  to="/tags/tag1"
                >
                  tag1
                </UNDEFINED>
              </styled.span>
              <styled.span>
                <UNDEFINED
                  to="/tags/tag2"
                >
                  tag2
                </UNDEFINED>
              </styled.span>
            </div>
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "data": Object {
              "date": "date",
              "excerpt": "excerpt",
              "image": Object {
                "childImageSharp": Object {
                  "fluid": Object {
                    "sizes": "image",
                  },
                },
              },
              "path": "path",
              "tags": Array [
                "tag1",
                "tag2",
              ],
              "timeToRead": 10,
              "title": "title",
            },
            "isPost": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <title>
                title
                 • 
                title
              </title>,
              <meta
                content={undefined}
                name="description"
              />,
              <meta
                content="@laura-fyi"
                name="twitter:site"
              />,
              <meta
                content="summary"
                name="twitter:card"
              />,
              <meta
                content="@laura-fyi"
                name="twitter:creator"
              />,
              <meta
                content="title"
                name="twitter:title"
              />,
              <meta
                content={undefined}
                name="twitter:description"
              />,
              <meta
                content={
                  Object {
                    "childImageSharp": Object {
                      "fluid": Object {
                        "sizes": "image",
                      },
                    },
                  }
                }
                name="twitter:image"
              />,
              <meta
                content="Cover image"
                name="twitter:image:alt"
              />,
            ],
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "title",
                  " • ",
                  "title",
                ],
              },
              "ref": null,
              "rendered": Array [
                "title",
                " • ",
                "title",
              ],
              "type": "title",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": undefined,
                "name": "description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "@laura-fyi",
                "name": "twitter:site",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "summary",
                "name": "twitter:card",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "@laura-fyi",
                "name": "twitter:creator",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "title",
                "name": "twitter:title",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": undefined,
                "name": "twitter:description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": Object {
                  "childImageSharp": Object {
                    "fluid": Object {
                      "sizes": "image",
                    },
                  },
                },
                "name": "twitter:image",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Cover image",
                "name": "twitter:image:alt",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <h1>
                title
              </h1>,
              <h3>
                date
              </h3>,
              undefined,
              <Image
                Tag="div"
                alt=""
                critical={false}
                fadeIn={true}
                fluid={
                  Object {
                    "sizes": "image",
                  }
                }
              />,
              <styled.div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": undefined,
                  }
                }
              />,
              <div
                className="tag-wrapper"
              >
                <styled.span>
                  <UNDEFINED
                    to="/tags/tag1"
                  >
                    tag1
                  </UNDEFINED>
                </styled.span>
                <styled.span>
                  <UNDEFINED
                    to="/tags/tag2"
                  >
                    tag2
                  </UNDEFINED>
                </styled.span>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "title",
              },
              "ref": null,
              "rendered": "title",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "date",
              },
              "ref": null,
              "rendered": "date",
              "type": "h3",
            },
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "Tag": "div",
                "alt": "",
                "critical": false,
                "fadeIn": true,
                "fluid": Object {
                  "sizes": "image",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "dangerouslySetInnerHTML": Object {
                  "__html": undefined,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <styled.span>
                    <UNDEFINED
                      to="/tags/tag1"
                    >
                      tag1
                    </UNDEFINED>
                  </styled.span>,
                  <styled.span>
                    <UNDEFINED
                      to="/tags/tag2"
                    >
                      tag2
                    </UNDEFINED>
                  </styled.span>,
                ],
                "className": "tag-wrapper",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "tag1",
                  "nodeType": "class",
                  "props": Object {
                    "children": <UNDEFINED
                      to="/tags/tag1"
                    >
                      tag1
                    </UNDEFINED>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "tag1",
                      "to": "/tags/tag1",
                    },
                    "ref": null,
                    "rendered": "tag1",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "tag2",
                  "nodeType": "class",
                  "props": Object {
                    "children": <UNDEFINED
                      to="/tags/tag2"
                    >
                      tag2
                    </UNDEFINED>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "tag2",
                      "to": "/tags/tag2",
                    },
                    "ref": null,
                    "rendered": "tag2",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Styled(styled.div)>
          <Seo
            data={
              Object {
                "date": "date",
                "excerpt": "excerpt",
                "image": Object {
                  "childImageSharp": Object {
                    "fluid": Object {
                      "sizes": "image",
                    },
                  },
                },
                "path": "path",
                "tags": Array [
                  "tag1",
                  "tag2",
                ],
                "timeToRead": 10,
                "title": "title",
              }
            }
            isPost={true}
          />
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              title
               • 
              title
            </title>
            <meta
              content={undefined}
              name="description"
            />
            <meta
              content="@laura-fyi"
              name="twitter:site"
            />
            <meta
              content="summary"
              name="twitter:card"
            />
            <meta
              content="@laura-fyi"
              name="twitter:creator"
            />
            <meta
              content="title"
              name="twitter:title"
            />
            <meta
              content={undefined}
              name="twitter:description"
            />
            <meta
              content={
                Object {
                  "childImageSharp": Object {
                    "fluid": Object {
                      "sizes": "image",
                    },
                  },
                }
              }
              name="twitter:image"
            />
            <meta
              content="Cover image"
              name="twitter:image:alt"
            />
          </HelmetWrapper>
          <styled.div>
            <h1>
              title
            </h1>
            <h3>
              date
            </h3>
            <Image
              Tag="div"
              alt=""
              critical={false}
              fadeIn={true}
              fluid={
                Object {
                  "sizes": "image",
                }
              }
            />
            <styled.div
              dangerouslySetInnerHTML={
                Object {
                  "__html": undefined,
                }
              }
            />
            <div
              className="tag-wrapper"
            >
              <styled.span>
                <UNDEFINED
                  to="/tags/tag1"
                >
                  tag1
                </UNDEFINED>
              </styled.span>
              <styled.span>
                <UNDEFINED
                  to="/tags/tag2"
                >
                  tag2
                </UNDEFINED>
              </styled.span>
            </div>
          </styled.div>
        </Styled(styled.div)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Seo
              data={
                Object {
                  "date": "date",
                  "excerpt": "excerpt",
                  "image": Object {
                    "childImageSharp": Object {
                      "fluid": Object {
                        "sizes": "image",
                      },
                    },
                  },
                  "path": "path",
                  "tags": Array [
                    "tag1",
                    "tag2",
                  ],
                  "timeToRead": 10,
                  "title": "title",
                }
              }
              isPost={true}
            />,
            <HelmetWrapper
              defer={true}
              encodeSpecialCharacters={true}
            >
              <title>
                title
                 • 
                title
              </title>
              <meta
                content={undefined}
                name="description"
              />
              <meta
                content="@laura-fyi"
                name="twitter:site"
              />
              <meta
                content="summary"
                name="twitter:card"
              />
              <meta
                content="@laura-fyi"
                name="twitter:creator"
              />
              <meta
                content="title"
                name="twitter:title"
              />
              <meta
                content={undefined}
                name="twitter:description"
              />
              <meta
                content={
                  Object {
                    "childImageSharp": Object {
                      "fluid": Object {
                        "sizes": "image",
                      },
                    },
                  }
                }
                name="twitter:image"
              />
              <meta
                content="Cover image"
                name="twitter:image:alt"
              />
            </HelmetWrapper>,
            <styled.div>
              <h1>
                title
              </h1>
              <h3>
                date
              </h3>
              <Image
                Tag="div"
                alt=""
                critical={false}
                fadeIn={true}
                fluid={
                  Object {
                    "sizes": "image",
                  }
                }
              />
              <styled.div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": undefined,
                  }
                }
              />
              <div
                className="tag-wrapper"
              >
                <styled.span>
                  <UNDEFINED
                    to="/tags/tag1"
                  >
                    tag1
                  </UNDEFINED>
                </styled.span>
                <styled.span>
                  <UNDEFINED
                    to="/tags/tag2"
                  >
                    tag2
                  </UNDEFINED>
                </styled.span>
              </div>
            </styled.div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "data": Object {
                "date": "date",
                "excerpt": "excerpt",
                "image": Object {
                  "childImageSharp": Object {
                    "fluid": Object {
                      "sizes": "image",
                    },
                  },
                },
                "path": "path",
                "tags": Array [
                  "tag1",
                  "tag2",
                ],
                "timeToRead": 10,
                "title": "title",
              },
              "isPost": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <title>
                  title
                   • 
                  title
                </title>,
                <meta
                  content={undefined}
                  name="description"
                />,
                <meta
                  content="@laura-fyi"
                  name="twitter:site"
                />,
                <meta
                  content="summary"
                  name="twitter:card"
                />,
                <meta
                  content="@laura-fyi"
                  name="twitter:creator"
                />,
                <meta
                  content="title"
                  name="twitter:title"
                />,
                <meta
                  content={undefined}
                  name="twitter:description"
                />,
                <meta
                  content={
                    Object {
                      "childImageSharp": Object {
                        "fluid": Object {
                          "sizes": "image",
                        },
                      },
                    }
                  }
                  name="twitter:image"
                />,
                <meta
                  content="Cover image"
                  name="twitter:image:alt"
                />,
              ],
              "defer": true,
              "encodeSpecialCharacters": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "title",
                    " • ",
                    "title",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "title",
                  " • ",
                  "title",
                ],
                "type": "title",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "content": undefined,
                  "name": "description",
                },
                "ref": null,
                "rendered": null,
                "type": "meta",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "content": "@laura-fyi",
                  "name": "twitter:site",
                },
                "ref": null,
                "rendered": null,
                "type": "meta",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "content": "summary",
                  "name": "twitter:card",
                },
                "ref": null,
                "rendered": null,
                "type": "meta",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "content": "@laura-fyi",
                  "name": "twitter:creator",
                },
                "ref": null,
                "rendered": null,
                "type": "meta",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "content": "title",
                  "name": "twitter:title",
                },
                "ref": null,
                "rendered": null,
                "type": "meta",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "content": undefined,
                  "name": "twitter:description",
                },
                "ref": null,
                "rendered": null,
                "type": "meta",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "content": Object {
                    "childImageSharp": Object {
                      "fluid": Object {
                        "sizes": "image",
                      },
                    },
                  },
                  "name": "twitter:image",
                },
                "ref": null,
                "rendered": null,
                "type": "meta",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "content": "Cover image",
                  "name": "twitter:image:alt",
                },
                "ref": null,
                "rendered": null,
                "type": "meta",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <h1>
                  title
                </h1>,
                <h3>
                  date
                </h3>,
                undefined,
                <Image
                  Tag="div"
                  alt=""
                  critical={false}
                  fadeIn={true}
                  fluid={
                    Object {
                      "sizes": "image",
                    }
                  }
                />,
                <styled.div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": undefined,
                    }
                  }
                />,
                <div
                  className="tag-wrapper"
                >
                  <styled.span>
                    <UNDEFINED
                      to="/tags/tag1"
                    >
                      tag1
                    </UNDEFINED>
                  </styled.span>
                  <styled.span>
                    <UNDEFINED
                      to="/tags/tag2"
                    >
                      tag2
                    </UNDEFINED>
                  </styled.span>
                </div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "title",
                },
                "ref": null,
                "rendered": "title",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "date",
                },
                "ref": null,
                "rendered": "date",
                "type": "h3",
              },
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "Tag": "div",
                  "alt": "",
                  "critical": false,
                  "fadeIn": true,
                  "fluid": Object {
                    "sizes": "image",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "dangerouslySetInnerHTML": Object {
                    "__html": undefined,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <styled.span>
                      <UNDEFINED
                        to="/tags/tag1"
                      >
                        tag1
                      </UNDEFINED>
                    </styled.span>,
                    <styled.span>
                      <UNDEFINED
                        to="/tags/tag2"
                      >
                        tag2
                      </UNDEFINED>
                    </styled.span>,
                  ],
                  "className": "tag-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "tag1",
                    "nodeType": "class",
                    "props": Object {
                      "children": <UNDEFINED
                        to="/tags/tag1"
                      >
                        tag1
                      </UNDEFINED>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "tag1",
                        "to": "/tags/tag1",
                      },
                      "ref": null,
                      "rendered": "tag1",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "tag2",
                    "nodeType": "class",
                    "props": Object {
                      "children": <UNDEFINED
                        to="/tags/tag2"
                      >
                        tag2
                      </UNDEFINED>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "tag2",
                        "to": "/tags/tag2",
                      },
                      "ref": null,
                      "rendered": "tag2",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
