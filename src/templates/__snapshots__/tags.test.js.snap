// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`blog 1 tag 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Tags
    data={
      Object {
        "allMarkdownRemark": Object {
          "edges": Array [
            Object {
              "node": Object {
                "frontmatter": Object {
                  "date": "date",
                  "excerpt": "excerpt",
                  "image": Object {
                    "childImageSharp": Object {
                      "fluid": Object {
                        "aspectRatio": 1.5,
                        "base64": "base64",
                        "sizes": "(max-width: 600px) 100vw, 600px",
                        "src": "src",
                        "srcSet": "srcSet",
                      },
                    },
                  },
                  "path": "path",
                  "tags": Array [
                    "tag1",
                    "tag2",
                  ],
                  "timeToRead": 10,
                  "title": "title",
                },
              },
            },
          ],
          "totalCount": 1,
        },
      }
    }
    pageContext={
      Object {
        "tag": "tag1",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          1 post tagged with "tag1"
        </h1>,
        <ul>
          <li>
            <UNDEFINED
              to="path"
            >
              title
            </UNDEFINED>
          </li>
        </ul>,
        <UNDEFINED
          to="/tags"
        >
          All tags
        </UNDEFINED>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "1 post tagged with \\"tag1\\"",
        },
        "ref": null,
        "rendered": "1 post tagged with \\"tag1\\"",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              <UNDEFINED
                to="path"
              >
                title
              </UNDEFINED>
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "path",
            "nodeType": "host",
            "props": Object {
              "children": <UNDEFINED
                to="path"
              >
                title
              </UNDEFINED>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "title",
                "to": "path",
              },
              "ref": null,
              "rendered": "title",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            "type": "li",
          },
        ],
        "type": "ul",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "All tags",
          "to": "/tags",
        },
        "ref": null,
        "rendered": "All tags",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            1 post tagged with "tag1"
          </h1>,
          <ul>
            <li>
              <UNDEFINED
                to="path"
              >
                title
              </UNDEFINED>
            </li>
          </ul>,
          <UNDEFINED
            to="/tags"
          >
            All tags
          </UNDEFINED>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "1 post tagged with \\"tag1\\"",
          },
          "ref": null,
          "rendered": "1 post tagged with \\"tag1\\"",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                <UNDEFINED
                  to="path"
                >
                  title
                </UNDEFINED>
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "path",
              "nodeType": "host",
              "props": Object {
                "children": <UNDEFINED
                  to="path"
                >
                  title
                </UNDEFINED>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "title",
                  "to": "path",
                },
                "ref": null,
                "rendered": "title",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
              },
              "type": "li",
            },
          ],
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "All tags",
            "to": "/tags",
          },
          "ref": null,
          "rendered": "All tags",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`blog 2 tags 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Tags
    data={
      Object {
        "allMarkdownRemark": Object {
          "edges": Array [
            Object {
              "node": Object {
                "frontmatter": Object {
                  "date": "date",
                  "excerpt": "excerpt",
                  "image": Object {
                    "childImageSharp": Object {
                      "fluid": Object {
                        "aspectRatio": 1.5,
                        "base64": "base64",
                        "sizes": "(max-width: 600px) 100vw, 600px",
                        "src": "src",
                        "srcSet": "srcSet",
                      },
                    },
                  },
                  "path": "path",
                  "tags": Array [
                    "tag1",
                    "tag2",
                  ],
                  "timeToRead": 10,
                  "title": "title",
                },
              },
            },
          ],
          "totalCount": 2,
        },
      }
    }
    pageContext={
      Object {
        "tag": "tag1",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          2 posts tagged with "tag1"
        </h1>,
        <ul>
          <li>
            <UNDEFINED
              to="path"
            >
              title
            </UNDEFINED>
          </li>
        </ul>,
        <UNDEFINED
          to="/tags"
        >
          All tags
        </UNDEFINED>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "2 posts tagged with \\"tag1\\"",
        },
        "ref": null,
        "rendered": "2 posts tagged with \\"tag1\\"",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              <UNDEFINED
                to="path"
              >
                title
              </UNDEFINED>
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "path",
            "nodeType": "host",
            "props": Object {
              "children": <UNDEFINED
                to="path"
              >
                title
              </UNDEFINED>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "title",
                "to": "path",
              },
              "ref": null,
              "rendered": "title",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            "type": "li",
          },
        ],
        "type": "ul",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "All tags",
          "to": "/tags",
        },
        "ref": null,
        "rendered": "All tags",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            2 posts tagged with "tag1"
          </h1>,
          <ul>
            <li>
              <UNDEFINED
                to="path"
              >
                title
              </UNDEFINED>
            </li>
          </ul>,
          <UNDEFINED
            to="/tags"
          >
            All tags
          </UNDEFINED>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "2 posts tagged with \\"tag1\\"",
          },
          "ref": null,
          "rendered": "2 posts tagged with \\"tag1\\"",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                <UNDEFINED
                  to="path"
                >
                  title
                </UNDEFINED>
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "path",
              "nodeType": "host",
              "props": Object {
                "children": <UNDEFINED
                  to="path"
                >
                  title
                </UNDEFINED>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "title",
                  "to": "path",
                },
                "ref": null,
                "rendered": "title",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
              },
              "type": "li",
            },
          ],
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "All tags",
            "to": "/tags",
          },
          "ref": null,
          "rendered": "All tags",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
